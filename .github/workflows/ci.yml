name: CI with Coverage and GitHub actions

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: .  # para que los imports "from core..." funcionen en discover

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # herramientas de CI que el workflow usa
          pip install coverage pylint

      - name: Run tests and generate coverage report
        run: |
          coverage run -m unittest discover -s tests -p "test*.py"
          coverage xml -o coverage.xml
          coverage report -m > coverage_report.txt

      - name: Run Pylint and generate report
        run: |
          # excluir tu entorno local .venv/ y .env/ si existieran
          find . -name "*.py" -not -path "./.venv/*" -not -path "./venv/*" -not -path "./.env/*" \
            | xargs pylint --rcfile=.pylintrc > pylint_report.txt || true

      - name: Generate reports file
        run: |
          cat << 'EOF' > generate_reports.py
          import os
          def read_file(p):
              return open(p, "r").read() if os.path.exists(p) else f"Error: Report file not found at {p}"
          coverage_report = read_file("coverage_report.txt")
          pylint_report = read_file("pylint_report.txt")
          with open("REPORTS.md", "w") as f:
              f.write("# Automated Reports\n\n## Coverage Report\n```text\n")
              f.write(coverage_report)
              f.write("\n```\n\n## Pylint Report\n```text\n")
              f.write(pylint_report)
              f.write("\n```\n")
          EOF
          python generate_reports.py

      - name: Create Pull Request for reports
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'docs: Update automated reports [skip ci]'
          title: 'Automated Reports Update'
          body: |
            ## Automated Reports Update
            This PR contains the latest automated reports:
            - Coverage Report
            - Pylint Report
            Generated by GitHub Actions workflow.
          branch: automated-reports-update
          delete-branch: true
          add-paths: |
            REPORTS.md
